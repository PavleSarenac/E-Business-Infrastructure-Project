version: "3.8"

services:
  authenticationDatabase:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD-SHELL", "for i in {1..5}; do mysqladmin ping -h localhost -u root -proot && sleep 5 || exit 1; done" ]
      timeout: 40s
      retries: 30
      start_period: 45s
    networks:
      - authenticationNetwork
    volumes:
      - "authenticationDatabaseData:/var/lib/mysql"
  storeDatabase:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD-SHELL", "for i in {1..5}; do mysqladmin ping -h localhost -u root -proot && sleep 5 || exit 1; done" ]
      timeout: 40s
      retries: 30
      start_period: 45s
    networks:
      - storeNetwork
    volumes:
      - "storeDatabaseData:/var/lib/mysql"
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - authenticationNetwork
      - storeNetwork
  authenticationDatabaseMigration:
    image: authenticationdatabasemigration
    environment:
      - PRODUCTION=True
      - DATABASE_URL=authenticationDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      authenticationDatabase:
        condition: service_healthy
    networks:
      - authenticationNetwork
  storeDatabaseMigration:
    image: storedatabasemigration
    environment:
      - PRODUCTION=True
      - DATABASE_URL=storeDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      storeDatabase:
        condition: service_healthy
    networks:
      - storeNetwork
  authentication:
    image: authentication
    ports:
      - "5000:5000"
    environment:
      - PRODUCTION=True
      - DATABASE_URL=authenticationDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      authenticationDatabaseMigration:
        condition: service_completed_successfully
    networks:
      - authenticationNetwork
  owner:
    image: owner
    ports:
      - "5001:5001"
    environment:
      - PRODUCTION=True
      - DATABASE_URL=storeDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      storeDatabaseMigration:
        condition: service_completed_successfully
    networks:
      - storeNetwork
  customer:
    image: customer
    ports:
      - "5002:5002"
    environment:
      - PRODUCTION=True
      - DATABASE_URL=storeDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      storeDatabaseMigration:
        condition: service_completed_successfully
    networks:
      - storeNetwork
  courier:
    image: courier
    ports:
      - "5003:5003"
    environment:
      - PRODUCTION=True
      - DATABASE_URL=storeDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
    depends_on:
      storeDatabaseMigration:
        condition: service_completed_successfully
    networks:
      - storeNetwork
  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    container_name: spark-master
    ports:
      - "8081:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      - storeNetwork
  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - storeNetwork
  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8083:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      - storeNetwork
  sparkApplication:
    image: sparkapplication
    ports:
      - "5004:5004"
    depends_on:
      spark-master:
        condition: service_started
      spark-worker-1:
        condition: service_started
      spark-worker-2:
        condition: service_started
      storeDatabase:
        condition: service_healthy
      storeDatabaseMigration:
        condition: service_completed_successfully
    environment:
      - PRODUCTION=True
      - DATABASE_URL=storeDatabase
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=root
      - ENABLE_INIT_DAEMON=False
    networks:
      - storeNetwork
  ganache:
    image: trufflesuite/ganache-cli
    ports:
      - "8545:8545"
    networks:
      - storeNetwork

networks:
  authenticationNetwork:
  storeNetwork:

volumes:
  authenticationDatabaseData:
  storeDatabaseData: